{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "CommonDbService",
            "id": "injectable-CommonDbService-b6e9146f36f53754bcfb314e77ba4773",
            "file": "src/app/services/common-db.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "\"http://localhost:3000/\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAllItems",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13
                },
                {
                    "name": "getSpecificItem",
                    "args": [
                        {
                            "name": "id",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonDbService {\r\n\r\n  private baseUrl = \"http://localhost:3000/\"\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllItems() {\r\n    const url = this.baseUrl + \"items\";\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getSpecificItem(id: number) {\r\n    const url = this.baseUrl + `items/${id}`;\r\n    return this.http.get(url);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LocalServiceService",
            "id": "injectable-LocalServiceService-db0c923a4962c570932640359b9704ef",
            "file": "src/app/services/local-service.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getLocalText",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport i18next from 'i18next';\r\nimport localization from '../../assets/localization-en.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LocalServiceService {\r\n  constructor() {\r\n    i18next.init(\r\n      {\r\n        lng: 'en',\r\n        debug: true,\r\n        resources: {\r\n          en: {\r\n            translation: localization,\r\n          },\r\n        },\r\n      },\r\n      function (err, t) {\r\n        // initialized and ready to go!\r\n        // document.getElementById('output').innerHTML = i18next.t('key');\r\n        console.log(i18next);\r\n      }\r\n    );\r\n  }\r\n\r\n  getLocalText(key?: string) {\r\n    return key !== undefined ? i18next.t(key) : '';\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-b0dda38f970a6690b77b35dfb293b3ac",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  navigateTo(): Promise<unknown> {\r\n    return browser.get(browser.baseUrl) as Promise<unknown>;\r\n  }\r\n\r\n  getTitleText(): Promise<string> {\r\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ItemCardModel",
            "id": "class-ItemCardModel-f88c4e0e422d6ce40007f589229bcf2b",
            "file": "src/app/components/item-card/item-card.model.ts",
            "type": "class",
            "sourceCode": "export class ItemCardModel {\r\n    public id: number = null;\r\n    public name: string = \"\";\r\n    public description: string = \"\";\r\n    public imgUrl: string = \"\";\r\n    public price: string = \"\";\r\n}",
            "properties": [
                {
                    "name": "description",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "null",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "imgUrl",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "name",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "price",
                    "defaultValue": "\"\"",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3cc5916ab9fe12cc85f6382b792f87cc",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- <app-item-card [item]=\"item\"></app-item-card> -->\r\n<app-item-list></app-item-list>"
        },
        {
            "name": "ItemCardComponent",
            "id": "component-ItemCardComponent-d6b0099f637df4b39f557d2ab3307216",
            "file": "src/app/components/item-card/item-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-card",
            "styleUrls": [
                "./item-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "line": 12,
                    "type": "ItemCardModel"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { LocalServiceService } from '../../services/local-service.service';\r\nimport { ItemCardModel } from './item-card.model';\r\n\r\n@Component({\r\n  selector: 'app-item-card',\r\n  templateUrl: './item-card.component.html',\r\n  styleUrls: ['./item-card.component.scss']\r\n})\r\nexport class ItemCardComponent implements OnInit {\r\n\r\n  @Input() item: ItemCardModel;\r\n\r\n  constructor(private locService: LocalServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const temp = this.locService.getLocalText('test-1');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item-card {\r\n  display: grid;\r\n  grid-template-columns: 170px 1fr;\r\n  align-items: flex-start;\r\n  padding: 10px;\r\n  border: 1px solid;\r\n\r\n  .item-img-container {\r\n    margin-right: 10px;\r\n\r\n    .item-img {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .item-details {\r\n    .item-description {\r\n      font-size: 12px;\r\n      color: #666666;\r\n    }\r\n\r\n    & > * {\r\n      margin-bottom: 8px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./item-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "locService",
                        "type": "LocalServiceService"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "locService",
                        "type": "LocalServiceService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"item-card\">\r\n  <div class=\"item-img-container\">\r\n    <img class=\"item-img\" src=\"{{ item.imgUrl }}\" alt=\"{{ item.name }}\" />\r\n  </div>\r\n  <div class=\"item-details\">\r\n    <div class=\"item-title\">\r\n      <span>{{ item.name }}</span>\r\n    </div>\r\n    <div class=\"item-description\">\r\n      <span>{{ item.description }}</span>\r\n    </div>\r\n    <div class=\"item-price\">\r\n      <span>{{ item.price }}</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ItemListComponent",
            "id": "component-ItemListComponent-cd03839ad5afcc8beb01a891de157dc4",
            "file": "src/app/components/item-list/item-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-item-list",
            "styleUrls": [
                "./item-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "itemLists",
                    "defaultValue": "[]",
                    "type": "ItemCardModel[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { CommonDbService } from 'src/app/services/common-db.service';\r\nimport { ItemCardModel } from '../item-card/item-card.model';\r\n\r\n@Component({\r\n  selector: 'app-item-list',\r\n  templateUrl: './item-list.component.html',\r\n  styleUrls: ['./item-list.component.scss']\r\n})\r\nexport class ItemListComponent implements OnInit {\r\n\r\n  itemLists: ItemCardModel[] = [];\r\n\r\n  constructor(private commonDb: CommonDbService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.commonDb.getAllItems().subscribe((data: ItemCardModel[])=>{\r\n      this.itemLists = data;\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item-card-list {\r\n  display: grid;\r\n  grid-template-columns: auto auto;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding: 10px;\r\n\r\n  app-item-card {\r\n    display: grid;\r\n    height: 100%;\r\n  }\r\n}\r\n",
                    "styleUrl": "./item-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "commonDb",
                        "type": "CommonDbService"
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "commonDb",
                        "type": "CommonDbService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"item-card-list\">\r\n    <app-item-card *ngFor=\"let item of itemLists\" [item]=\"item\"></app-item-card>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ItemCardComponent"
                        },
                        {
                            "name": "ItemListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/item-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/item-card.stories.ts",
                "type": "Story<ItemCardComponent>",
                "defaultValue": "(args: ItemCardComponent) => ({\r\n  component: ItemCardComponent,\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/item-card.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/item-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/item-card.stories.ts",
                    "type": "Story<ItemCardComponent>",
                    "defaultValue": "(args: ItemCardComponent) => ({\r\n  component: ItemCardComponent,\r\n  props: args,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-card/item-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-card/item-card.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ItemCardModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/item-list/item-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/common-db.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommonDbService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/local-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalServiceService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/item-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/item-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}